#%RAML 1.0
---
title: Developer Forum
version: 1.3

protocols: [ HTTPS ]
baseUri: https://api-documentation-test-service.hmrc.gov.uk/

documentation:
 - title: Overview
   content: !include docs/overview.md
 - title: Versioning
   content: We use versions.

mediaType: application/hal+json

annotationTypes:
  config: object
  group:
    type: object
    properties:
      name: string
      description: string

/users:
  (group):
    name: Users
    description: Manage forum users
  post:
    description: create user
    body:
      application/json:
        example: !include examples/user-create.json
    responses:
      200:
        description: User created
      500:
        description: Failed to create user
  put:
    description: update the user details
    body:
      application/json:
        schema: !include schemas/user-update-request.json
        example: !include examples/user-update.json
    responses:
      200:
        body:
          application/json:
            schema: !include schemas/user-update-response.json
            example: { "message": "User updated" }
      404:
        body:
          application/json:
            example: { "message": "User not found" }
  /{id}:
    get:
      description: Get user details for the given id
      responses:
        200:
          body:
            application/json:
              example: !include examples/user-get.json
        404:
          body:
            application/json:
              example: { "message": "User not found" }
    delete:
      description: delete the given user
      responses:
        200:
          body:
            application/json:
              example: |
                { "message": "user deleted" }
        404:
          body:
            application/json:
              example: |
                { "message": "unknown user" }

/posts:
  (group):
    name: Posts
    description: Manage forum posts
  post:
    description: create a new post
    body:
      application/json:
        example: !include examples/post-create-req.json
  put:
    description: update a post
    body:
      application/json:
        example: !include examples/post-update.json
    responses:
      200:
        body:
          application/json:
            example: { "message": "Post updated" }
      500:
        body:
          application/json:
            example: { "message": "An error occurred, please try again" }
  /{id}:
    get:
      description: get the specific post by id
      responses:
        200:
          body:
            application/json:
              example: !include examples/post-create.json
    delete:
      description: delete the post
      responses:
        200:
          body:
            application/json:
              example: { "message": "The post was deleted" }
        404:
          body:
            application/json:
              example: { "message": "Post not found" }
  /today:
    get:
      description: return all the posts for today
      responses:
        200:
          body:
            application/json:
              example: !include examples/post-get-today.json
  /week:
    get:
      description: return all the posts for the week
      responses:
        200:
          body:
            application/json:
              example: !include examples/post-get-week.json
  /user/{userId}:
    get:
      description: Get all the posts for a user
      responses:
        200:
          body:
            application/json:
              example: !include examples/post-get-user.json
        404:
          body:
            application/json:
              example: { "message": "User has no posts" }

/comments:
  (group):
    name: Comments
    description: Manage forum comments
  post:
    description: post a new comment
    body:
      application/json:
        example: !include examples/comment-create.json
  put:
    description: update a comment
    body:
      application/json:
        example: !include examples/comment-update.json
  /{postId}:
    get:
      description: get all the comments for a post
      responses:
        200:
          body:
            application/json:
              example: !include examples/post-get-comments.json
        404:
          body:
            application/json:
              example: { "message": "Be the first to comment!" }
    /{commentId}:
      get:
        description: get all revisions of a comment
        responses:
          200:
            body:
              application/json:
                example: !include examples/comment-get.json
      delete:
        description: delete a comment from a post
        responses:
          200:
            body:
              application/json:
                example: { "message": "Comment deleted" }
          404:
            body:
              application/json:
                example: { "message": "Comment not found to delete" }

/votes:
  (group):
    name: Votes
    description: Manage forum votes
  post:
    description: adds a vote to a post
    body:
      application/json:
        example: !include examples/vote-create.json
    responses:
      200:
        body:
          application/json:
            example: { "message": "Thanks for voting!" }
      500:
        body:
          application/json:
            example: { "message": "Oops something went wrong, please try again" }
  /post/{postId}:
    get:
      description: get the votes for a particular post
      responses:
        200:
          body:
            application/json:
              example: !include examples/votes-for-post.json
        404:
          body:
            application/json:
              example: { "message": "Be the first to vote" }
  /user/{userId}:
    get:
      description: get all of a users votes
      responses:
        200:
          body:
            application/json:
              example: !include examples/votes-for-user.json
        404:
          body:
            application/json:
              example: { "message": "User is yet to vote" }
